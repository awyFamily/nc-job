<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.awyFamily</groupId>
    <artifactId>nc-job</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <description>
        当前项目主要是依据xxl-job 项目核心类  进行简单的改造，
        use Spring Cloud Feign remote invoke,
        想要了解更多关于分布式调度信息 请关注： https://github.com/xuxueli/xxl-job
    </description>

    <properties>
        <java.version>11</java.version>
        <nc.job.version>1.0.0</nc.job.version>
        <spring.boot.version>2.1.6.RELEASE</spring.boot.version>
        <spring.cloud.version>Greenwich.SR2</spring.cloud.version>
        <spring.platform.version>Cairo-SR7</spring.platform.version>
        <mysql.connector.java.version>8.0.28</mysql.connector.java.version>
        <mybatis.plus.version>3.1.0</mybatis.plus.version>
        <swagger.version>2.9.2</swagger.version>
        <swagger.annotations>1.5.20</swagger.annotations>
        <hutool.version>4.5.10</hutool.version>
        <lombok.version>1.18.6</lombok.version>
        <slf4j.version>1.7.25</slf4j.version>
        <log4j.version>2.13.3</log4j.version>
        <project.sourceEncoding>UTF-8</project.sourceEncoding>
        <org.apache.maven.plugins.version>3.8.0</org.apache.maven.plugins.version>
        <docker.plugins.version>1.2.0</docker.plugins.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <modules>
        <module>eureka-server</module>
        <module>common-discovery-client</module>

        <module>nc-job-api</module>
        <!-- 任务调度管理器 -->
        <module>nc-job-admin</module>
        <!-- 任务执行器核心包，任务执行器导入当前模块就可以使用 -->
        <module>nc-job-core</module>
        <!-- 示例 -->
        <module>nc-job-example</module>
    </modules>

    <dependencies>
        <!-- jdk11 依赖  begin,如果是java8 则无需引用下列jar -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>


        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!--springcloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--springboot-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>${spring.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>


            <!-- mysql支持 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.java.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>


            <!--swagger 依赖-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-common</artifactId>
                <version>${swagger.version}</version>
<!--                <scope>compile</scope>-->
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.annotations}</version>
<!--                <scope>compile</scope>-->
            </dependency>

            <!--工具包开始 -->
            <!--hutool-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>[1.18,)</version>
            </dependency>

            <!-- 日志 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <!--Lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!--工具包结束 -->


        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.name}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>test/*</exclude>
                </excludes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${org.apache.maven.plugins.version}</version>
                    <configuration>
                        <source>${java.version}</source> <!--源代码 jdk版本-->
                        <target>${java.version}</target> <!--class文件编译版本-->
                        <encoding>${project.sourceEncoding}</encoding> <!-- 字符集编码-->
                        <skip>true</skip> <!-- 打包跳过测试 -->
                    </configuration>
                </plugin>


                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${org.apache.maven.plugins.version}</version>
                    <configuration>
                        <attach>true</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>compile</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.plugins.version}</version>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <imageName>awyFamily/${project.name}:latest</imageName>
                        <env>
                            <TZ>Asia/Shanghai</TZ>
                        </env>
                        <dockerDirectory>${project.basedir}</dockerDirectory>
                        <!-- 启动容器执行命令 -->
                        <entryPoint>["java", "-jar", "-Xmx 128M", "-Xms 128M", "/${project.build.finalName}.jar"]</entryPoint>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                        <!-- 与maven配置文件setting.xml中的 server.id一致，用于推送镜像-->
                        <!--<serverId>docker-hub</serverId>-->
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
